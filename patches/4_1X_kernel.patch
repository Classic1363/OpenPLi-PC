diff -ruN b/dvbsoftwareca/ca_netlink.c a/dvbsoftwareca/ca_netlink.c
--- b/dvbsoftwareca/ca_netlink.c	2019-12-09 16:46:17.830614323 +0300
+++ a/dvbsoftwareca/ca_netlink.c	2019-12-09 16:46:53.557307862 +0300
@@ -12,14 +12,6 @@
 	[ATTR_CA_SIZE] = { .type = NLA_U32 },
 };
 
-struct genl_family ca_family = {
-	.id = GENL_ID_GENERATE,
-	.hdrsize = 0,
-	.name = "CA_SEND",
-	.version = 1,
-	.maxattr = ATTR_MAX,
-};
-
 // commands: mapping between the command enumeration and the actual function
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3,13,0)
 struct genl_ops ask_ca_size_ops = {
@@ -37,6 +29,20 @@
 #endif
 };
 
+struct genl_family ca_family = {
+#if LINUX_VERSION_CODE <= KERNEL_VERSION(4,9,0)
+	.id = GENL_ID_GENERATE,
+#endif
+	.hdrsize = 0,
+	.name = "CA_SEND",
+	.version = 1,
+	.maxattr = ATTR_MAX,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(4,9,0)
+	.ops = ask_ca_size_ops,
+	.n_ops = ARRAY_SIZE(ask_ca_size_ops),
+#endif
+};
+
 int processPid = 0;
 
 int reply_ca(struct sk_buff *skb_2, struct genl_info *info)
@@ -163,8 +169,10 @@
 	// register new family
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3,13,0)
 	ret = genl_register_family(&ca_family);
-#else
+#elseif LINUX_VERSION_CODE <= KERNEL_VERSION(4,9,0)
 	ret = genl_register_family_with_ops(&ca_family, ask_ca_size_ops);
+#else
+	ret = genl_register_family(&ca_family);
 #endif
 	if (ret) {
 		printk("dvbsoftwareca: genl_register_family error\n");
diff -ruN b/dvbsoftwareca/dvb_softwareca.c a/dvbsoftwareca/dvb_softwareca.c
--- b/dvbsoftwareca/dvb_softwareca.c	2019-12-09 16:46:17.831614343 +0300
+++ a/dvbsoftwareca/dvb_softwareca.c	2019-12-09 16:46:53.558307881 +0300
@@ -192,7 +192,7 @@
 	return 0;
 }
 
-static char *dvb_devnode(struct device *dev, mode_t *mode)
+static char *dvb_devnode(struct device *dev, umode_t *mode)
 {
 	struct ca_device *cadev = dev_get_drvdata(dev);
 
